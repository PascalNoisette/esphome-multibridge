name: Upload Release Asset

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          docker run --rm -v "${PWD}":/config esphome/esphome bridge.yaml compile
          mkdir artefacts
          tar -zcvf artefacts/build.tar.gz --exclude=./artefacts .
      - name: Upload frozen in time dependancies to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artefacts/build.tar.gz
          asset_name: build.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload firmware to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./multibridge/.pioenvs/multibridge/firmware.bin
          asset_name: firmware.bin
          tag: ${{ github.ref }}
          overwrite: true
